all: all-redirect

# Set the basic directories
prefix           = @prefix@
exec_prefix      = @exec_prefix@
datarootdir      = @datarootdir@
libdir           = @libdir@
abs_builddir     = @abs_builddir@
abs_top_builddir = @abs_top_builddir@
builddir         = @builddir@
top_builddir     = @top_builddir@
abs_srcdir       = @abs_srcdir@
abs_top_srcdir   = @abs_top_srcdir@

master_top_builddir = @master_top_builddir@
master_top_srcdir   = @master_top_srcdir@
include $(master_top_srcdir)/Makefile.doc

MPI_DIR = @MPI_DIR@
# Some systems may want to add -static to the MPICC line
MPICC   = @MPICC@
MPIFORT = @MPIFORT@
#MPIEXEC = @MPIEXEC@
#MPIEXEC_NP = @MPIEXEC_NP@
RANLIB  = @RANLIB@
MKDIR_P = @MKDIR_P@
DOCTEXT = @DOCTEXT@

# -I.. to get definitions for the IO routines, -I../.. to get baseenv.h
CPPFLAGS = @DEFS@ -I.. -I../..
CFLAGS = @CFLAGS@
COPT = @COPT@
FCOPT = @FCOPT@
SUBDIRS =

EXECS = checkposix faststdebug ioda iodar ireadtest ireadtest2 streamex \
	owritetest
BASEENV_LIB = @BASEENV_LIB@
OTHEREXECS =
OTHEROBJS  =

SOURCES      = checkposix.c faststdebug.c ioda.c iodar.c ireadtest.c \
	ireadtest2.c streamex.c owritetest.c
HEADER_FILES =
DIST_COMMON  = Makefile.in
DOC_FILES    =
DOC_SOURCES  = $(SOURCES) $(HEADER_FILES)

.SUFFIXES:
.SUFFIXES: .c .o
# Default rules to force use of the MPI compilers
.c.o:	$?
	$(MPICC) $(CFLAGS) $(COPT) $(CPPFLAGS) -c $(?) -o $(@)
.f.o:   $?
	$(MPIFORT) $(FFLAGS) $(FCOPT) -c $(?) -o $(@)
.f90.o: $?
	$(MPIFORT) $(FFLAGS) $(FCOPT) -c $(?) -o $(@)

default:

all-redirect: $(EXECS)

# The tests directory does not update the baseenv library
baseenvlib:
baseenvprogs: $(EXECS)

checkposix: checkposix.o $(BASEENV_LIB)
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o checkposix checkposix.o $(BASEENV_LIB) @LLAPILIB@

streamex.o: streamex.c ../faststream.h
	$(MPICC) $(CFLAGS) $(COPT) $(CPPFLAGS) -c streamex.c
streamex: streamex.o $(BASEENV_LIB)
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o streamex streamex.o $(BASEENV_LIB)

owritetest.o: owritetest.c ../faststream.h
	$(MPICC) $(CFLAGS) $(COPT) $(CPPFLAGS) -c owritetest.c
owritetest: owritetest.o $(BASEENV_LIB)
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o owritetest owritetest.o \
	$(BASEENV_LIB)

faststdebug: faststdebug.c
	$(CC) $(CFLAGS) $(LDFLAGS) -o faststdebug faststdebug.c

ioda: ioda.o
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o ioda ioda.o

iodar: iodar.o
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o iodar iodar.o

ireadtest: ireadtest.o
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o ireadtest ireadtest.o

ireadtest2: ireadtest2.o
	$(MPICC) $(CFLAGS) $(COPT) $(LDFLAGS) -o ireadtest2 ireadtest2.o

ioda.o: ioda.c
	$(MPICC) $(CFLAGS) $(COPT) -DMYSCRATCHDIR='"@MYSCRATCHDIR@"' -c ioda.c

iodar.o: iodar.c
	$(MPICC) $(CFLAGS) $(COPT) -DMYSCRATCHDIR='"@MYSCRATCHDIR@"' -c iodar.c

Makefile: Makefile.in ../../config.status
	(cd ../.. && ./config.status --file=io/tests/Makefile)

clean::
	rm -f *.o *.ps *.pdf $(OTHEROBJS) \
		fpmpi_profile.txt *.chkpt *~ io_buf.txt
	for dir in $(SUBDIRS) ; do (cd $$dir && $(MAKE) clean) ; done

realclean: clean
	rm -f $(EXECS) $(OMPEXECS) $(OTHEREXECS) *.exe *.stackdump
	for dir in $(SUBDIRS) ; do (cd $$dir && $(MAKE) realclean) ; done

distclean: realclean
	for dir in $(SUBDIRS) ; do (cd $$dir && $(MAKE) distclean) ; done
	rm -f config.log config.status
	rm -rf autom4te.cache

dist:
	@if [ "X$(distdir)" == "X" ] ; then echo "Set distdir" ; exit 1 ; fi
	@if [ ! -d $(distdir) ] ; then mkdir $(distdir) ; fi
	cp $(SOURCES) $(distdir)
	if [ X$(HEADER_FILES) != X ] ; then cp $(HEADER_FILES) $(distdir) ; fi
	cp $(DIST_COMMON) $(distdir)
	if [ "X$(DOC_FILES)" != "X" ] ; then cp $(DOC_FILES) $(distdir) ; fi

# Documentation targets
mandoc: $(mandoc_path3) $(DOC_SOURCES)
	$(DOCTEXT) $(DOCTEXT_MAN_OPTIONS) -mpath $(mandoc_path3) -ext 3 \
		$(DOC_SOURCES)
htmldoc: $(htmldoc_path3) $(DOC_SOURCES)
	$(DOCTEXT) $(DOCTEXT_HTML_OPTIONS) -mpath $(htmldoc_path3) \
		$(DOC_SOURCES)

.PHONY: baseenvlib baseenvprogs clean realclean distclean dist mandoc htmldoc
